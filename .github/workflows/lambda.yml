name: AWS Lambda Deploy
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions

      - name: get-caller-identity is allowed to run on role.
        run: aws sts get-caller-identity

      - name: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Poetry Version
        run: |
          poetry --version

      - name: Poetry Export
        run: |
          poetry export --without-hashes --output requirements.txt

      - name: package install
        run: |
          pip3 install -r requirements.txt -t .

      - name: lambda pre-update
        run: |
          pip3 install awscli
          zip -r package.zip ./*
      - name: lambda update for pull request
        if: github.event_name == 'pull_request'
        run: |
          aws lambda update-function-code --function-name mf --zip-file fileb://package.zip --no-publish
      - name: lambda update for push
        if: github.event_name == 'push'
        run: |
          aws lambda update-function-code --function-name mf --zip-file fileb://package.zip --no-publish
          sleep 10s
          aws lambda publish-version --function-name mf --description "commit ${{ github.sha }}"
